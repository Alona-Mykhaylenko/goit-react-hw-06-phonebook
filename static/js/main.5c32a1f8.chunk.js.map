{"version":3,"sources":["components/contactList/contactList.module.css","redux/app-actions.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","redux/store.js","index.js","components/contactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","filter","handleDelete","handleChange","ContactForm","state","event","target","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","alert","addContactProp","className","styles","formBox","onSubmit","this","label","type","pattern","title","required","onChange","formInput","submitButton","Component","connect","dispatch","filterInput","toLowerCase","trim","filteredContactsProp","includes","handleDeleteProp","map","li","button","onClick","App","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","ContactsReducer","createReducer","FilterReducer","_","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5c32a1f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"contactList_button__2kq8r\",\"li\":\"contactList_li__YbvIy\"};","\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nconst addContact = createAction('app/addContact', (name, number) =>{\r\n    return {\r\n        payload: {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n            filter: '',\r\n          }\r\n\r\n    }\r\n})\r\n\r\n\r\nconst handleDelete = createAction('app/handleDelete')\r\n\r\nconst handleChange = createAction('app/handleChange')\r\n\r\nexport {addContact, handleDelete, handleChange};\r\n","import React, { Component } from \"react\";\nimport styles from \"./contactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport {connect} from 'react-redux';\nimport { addContact } from \"../../redux/app-actions\";\n\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.props.contacts.find((contact) => contact.name === this.state.name)) {\n          alert(`${this.state.name} is already in contacts`);\n          return;\n        }\n\n    this.props.addContactProp(this.state.name, this.state.number); \n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <div className={styles.formBox}>\n        <form onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            Name <br />\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={styles.formInput}\n            />\n          </label>{\" \"}\n          <label className={styles.label}>\n            Number <br />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={styles.submitButton}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts,\n})\n\nconst mapDispatchToProps = dispatch =>({\n  addContactProp: (name, number)=> dispatch(addContact(name, number))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n\nContactForm.propTypes = {\n  addContactProp: PropTypes.func.isRequired,\n};","import styles from \"./contactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { handleDelete } from \"../../redux/app-actions\";\n\n\n\nconst ContactList = ({ filteredContactsProp, handleDeleteProp }) => {\n  return (\n    <ul>\n      {filteredContactsProp.map((contact) => (\n        <li key={contact.id} className={styles.li}>\n          {contact.name}: {contact.number}\n          <button\n            className={styles.button}\n            type=\"button\"\n            onClick={() => handleDeleteProp(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) =>{\n  const filterInput = state.filter.toLowerCase().trim();\n    const filteredContacts = state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterInput)\n    );\n    return {\n  filteredContactsProp: filteredContacts\n}};\n\nconst mapDispatchToProps = dispatch =>({\n  handleDeleteProp: (id) => dispatch (handleDelete(id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);\n\n\n\nContactList.propTypes = {\n  filteredContactsProp: PropTypes.array.isRequired,\n  handleDeleteProp: PropTypes.func.isRequired,\n};\n\n\n","import PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport { handleChange } from \"../../redux/app-actions\";\n\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label>\n      Find contacts by name <br />\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n\nconst mapStateToProps =(state) =>({\n  filter: state.filter,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  handleChange: event => dispatch(handleChange(event.target.value))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nconst App =() => {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm/>\n\n        <h2>Contacts</h2>\n        <Filter/>\n\n        <ContactList\n        />\n      </div>\n    );\n  }\n\n\nexport default App;","import { combineReducers, configureStore, createReducer, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {addContact, handleDelete, handleChange} from './app-actions';\r\nimport { persistStore, persistReducer, FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'hello',\r\n  storage,\r\n};\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n  }\r\n}), logger];\r\n\r\nconst ContactsReducer = createReducer([], {\r\n  [addContact]:(state, {payload})=> [...state, payload],\r\n  [handleDelete]: (state, {payload}) => state.filter((contact) => contact.id !== payload),\r\n})\r\n\r\n\r\nconst FilterReducer = createReducer('', {\r\n  [handleChange]: (_, {payload})=> payload,\r\n})\r\n\r\nconst rootReducer = combineReducers ({\r\n  contacts:ContactsReducer,\r\n  filter: FilterReducer,\r\n})\r\n\r\n\r\n\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n  \r\n\r\n    \r\n  })\r\n\r\n    const persistor = persistStore(store);\r\n\r\nexport default {store, persistor};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n    <App />\n    </PersistGate>\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"contactForm_formBox__34Ua3\",\"submitButton\":\"contactForm_submitButton__3TdON\",\"label\":\"contactForm_label__2kwOX\"};"],"sourceRoot":""}